<context>
# Overview
이 문서는 '뷰티 코스메틱 쇼핑몰' 웹사이트에 Google Analytics 4 (GA4) 전자상거래 추적 기능을 구현하기 위한 제품 요구사항 명세서(PRD)입니다. 목표는 사용자의 쇼핑 행동(상품 조회, 장바구니 추가, 구매 등)을 GA4 표준 스키마에 따라 추적하여, 마케팅 및 사용자 경험 개선에 필요한 데이터를 확보하는 것입니다. 이 구현은 Google Tag Manager(GTM)를 통해 관리되며, 웹사이트의 `dataLayer`를 사용하여 데이터를 전송합니다.

# Core Features
구현할 핵심 GA4 전자상거래 이벤트는 다음과 같습니다:

-   **`view_item_list`:** 사용자가 상품 목록 페이지(product-list.html 등)를 조회할 때, 화면에 표시된 상품들의 정보를 전송합니다. (목록 이름, 상품 ID, 이름, 위치 등)
-   **`select_item`:** 사용자가 상품 목록에서 특정 상품을 클릭할 때, 클릭된 상품 및 해당 목록 정보를 전송합니다.
-   **`view_item`:** 사용자가 상품 상세 페이지(product-detail.html)를 조회할 때, 해당 상품의 상세 정보를 전송합니다. (통화, 가격, 상품 ID, 이름, 브랜드, 카테고리 등)
-   **`add_to_cart`:** 사용자가 상품을 장바구니에 추가할 때, 추가된 상품 정보(ID, 이름, 가격, 수량 등)를 전송합니다.
-   **`remove_from_cart`:** 사용자가 장바구니에서 상품을 제거할 때, 제거된 상품 정보(ID, 이름, 가격, 수량 등)를 전송합니다.
-   **`view_cart`:** 사용자가 장바구니 페이지(cart.html)를 조회할 때, 장바구니에 담긴 모든 상품 정보와 총액을 전송합니다.
-   **`begin_checkout`:** 사용자가 결제 프로세스(checkout.html)를 시작할 때, 장바구니 상품 정보와 총액을 전송합니다.
-   **`add_shipping_info`:** (선택 사항) 사용자가 결제 중 배송 정보를 입력/선택할 때 관련 정보를 전송합니다. (현재 플로우에서는 `purchase`와 통합될 수 있음)
-   **`add_payment_info`:** (선택 사항) 사용자가 결제 수단을 선택/입력할 때 관련 정보를 전송합니다. (현재 플로우에서는 `purchase`와 통합될 수 있음)
-   **`purchase`:** 사용자가 구매를 완료할 때, 거래 정보(거래 ID, 총액, 세금, 배송비 등)와 구매한 상품 정보를 전송합니다.
-   **`view_promotion`:** (선택 사항) 사용자에게 프로모션 배너 등이 노출될 때, 해당 프로모션 정보를 전송합니다.
-   **`select_promotion`:** (선택 사항) 사용자가 프로모션 배너 등을 클릭할 때, 클릭된 프로모션 정보를 전송합니다.

# User Experience
GA4 전자상거래 추적은 직접적인 사용자 인터페이스 변경을 요구하지 않습니다. 하지만 수집된 데이터를 통해 사용자의 쇼핑 여정(어떤 목록에서 상품을 보고, 어떤 상품을 클릭하며, 장바구니에 담고 최종 구매하는지 등)을 분석하여, 향후 UI/UX 개선 및 개인화된 마케팅 활동의 기반을 마련할 수 있습니다.

</context>
<PRD>
# Technical Architecture
-   **데이터 전송 방식:** `window.dataLayer.push()` 함수를 사용하여 GA4 전자상거래 스키마에 맞는 데이터를 GTM으로 전송합니다. GTM에서는 이 데이터를 받아 GA4로 전달하는 태그를 설정합니다.
-   **구현 위치:** 각 이벤트는 해당 사용자 행동이 발생하는 시점의 JavaScript 함수 내에서 구현됩니다.
    -   페이지 조회 이벤트 (`view_item_list`, `view_item`, `view_cart`): 각 페이지 로딩 시 실행되는 초기화 함수 (`loadProductList`, `loadProductDetail`, `loadCartItems` 등) 내부. 주로 `scripts/product.js`, `scripts/cart.js`.
    -   클릭/액션 이벤트 (`select_item`, `add_to_cart`, `remove_from_cart`, `begin_checkout`, `purchase`, `select_promotion`): 관련 버튼의 `onclick` 핸들러 또는 해당 액션을 처리하는 JavaScript 함수 내부. 주로 `scripts/product.js`, `scripts/cart.js`.
-   **데이터 소스:** 전송될 상품 및 거래 정보는 기존의 전역 변수 (`window.products`) 및 로컬 스토리지 (`cart`, `purchaseHistory` 등)와 페이지 로딩 시 URL 파라미터, 또는 함수 내 지역 변수를 활용하여 구성합니다. 상품 ID, 이름, 가격 등의 데이터 일관성 유지가 중요합니다.
-   **참고 스키마:** Simo Ahava의 GA4 전자상거래 가이드 ([https://www.simoahava.com/analytics/google-analytics-4-ecommerce-guide-google-tag-manager/](https://www.simoahava.com/analytics/google-analytics-4-ecommerce-guide-google-tag-manager/)) 및 공식 GA4 개발자 문서를 참조합니다.
-   **GTM 설정:** 웹사이트 코드 변경과 별도로, GTM 내에서 각 `dataLayer` 이벤트를 트리거로 사용하고 GA4 스키마에 맞게 데이터를 매핑하는 GA4 이벤트 태그 설정이 필요합니다.

# Development Roadmap
개발은 사용자 쇼핑 흐름에 따라 단계적으로 진행합니다.

-   **Phase 1: 상품 조회 추적 (기본)**
    -   `view_item_list` 구현 (`scripts/product.js` - `loadProductList`)
    -   `view_item` 구현 (`scripts/product.js` - `loadProductDetail`)
    -   `select_item` 구현 (`scripts/product.js` - `createProductItem`의 `onclick`) 및 목록 정보 URL 파라미터 전달
    -   GTM 설정 및 테스트 (조회 관련 이벤트)
-   **Phase 2: 장바구니 활동 추적**
    -   `add_to_cart` 구현 (`scripts/product.js` - `addToCartWithQuantity`)
    -   `remove_from_cart` 구현 (신규 함수 및 UI 필요 - `scripts/cart.js`)
    -   `view_cart` 구현 (`scripts/cart.js` - `loadCartItems`)
    -   GTM 설정 및 테스트 (장바구니 관련 이벤트)
-   **Phase 3: 결제 및 구매 추적**
    -   `begin_checkout` 구현 (`scripts/cart.js` 또는 관련 버튼 핸들러)
    -   `add_shipping_info` 및 `add_payment_info` 구현 (선택 사항, `scripts/cart.js` - `completePurchase` 내 또는 별도 단계)
    -   `purchase` 구현 (`scripts/cart.js` - `completePurchase`, Transaction ID 생성 포함)
    -   GTM 설정 및 테스트 (결제/구매 관련 이벤트)
-   **Phase 4: 프로모션 추적 (선택 사항)**
    -   `view_promotion` 구현 (관련 페이지 초기화 로직)
    -   `select_promotion` 구현 (프로모션 클릭 핸들러)
    -   GTM 설정 및 테스트 (프로모션 관련 이벤트)

# Logical Dependency Chain
1.  **상품 데이터 로딩 (`window.loadProductData`)**: 모든 이벤트의 기초가 되는 상품 정보 로딩이 선행되어야 합니다.
2.  **페이지 조회 이벤트 (`view_item_list`, `view_item`)**: 사용자의 가장 기본적인 행동으로 우선 구현합니다.
3.  **상품 선택 (`select_item`)**: 목록 조회 후 발생하는 행동입니다.
4.  **장바구니 이벤트 (`add_to_cart`, `view_cart`, `remove_from_cart`)**: 상품 조회/선택 후 이어지는 행동입니다. `remove_from_cart`는 UI 구현이 필요할 수 있습니다.
5.  **결제 이벤트 (`begin_checkout`, `add_shipping/payment_info`, `purchase`)**: 장바구니 이후의 최종 단계입니다. `purchase`는 필수적입니다.
6.  **프로모션 이벤트 (`view_promotion`, `select_promotion`)**: 다른 이벤트들과 독립적으로 구현 가능하지만, 보통 기본 쇼핑 흐름 구현 후 진행합니다.

# Risks and Mitigations
-   **데이터 불일치:** 여러 이벤트에서 사용되는 상품 정보(ID, 이름, 가격)가 다를 수 있습니다. -> `window.products`를 기준으로 일관된 데이터를 사용하고, `dataLayer` 생성 시점에 데이터를 재확인합니다.
-   **스키마 오류:** GA4 전자상거래 스키마(필수 필드, 데이터 타입 등)를 잘못 구현할 수 있습니다. -> Simo Ahava 가이드 및 공식 문서를 철저히 참조하고, GTM Preview 및 GA4 DebugView를 통해 검증합니다.
-   **이벤트 누락/중복:** 특정 사용자 행동이 추적되지 않거나 중복으로 추적될 수 있습니다. -> 각 이벤트 트리거 시점을 명확히 정의하고, 코드 내에서 정확한 위치에 `dataLayer.push`를 구현합니다. `ecommerce: null` 초기화를 사용하여 이벤트 간 간섭을 방지합니다.
-   **GTM 설정 복잡성:** 다양한 이벤트와 파라미터를 GTM에서 설정하는 것이 복잡할 수 있습니다. -> GTM 변수(Data Layer Variable)를 체계적으로 생성하고, 각 태그 설정을 꼼꼼히 확인합니다.
-   **테스트 환경:** 실제 데이터와 유사한 환경에서 충분한 테스트가 필요합니다. -> 다양한 상품과 시나리오(할인, 쿠폰 등)를 포함하여 테스트를 진행합니다.

# Appendix
-   Simo Ahava's GA4 Ecommerce Guide: [https://www.simoahava.com/analytics/google-analytics-4-ecommerce-guide-google-tag-manager/](https://www.simoahava.com/analytics/google-analytics-4-ecommerce-guide-google-tag-manager/)
-   Google Analytics 4 Ecommerce (gtag.js) Developer Guide: [https://developers.google.com/analytics/devguides/collection/ga4/ecommerce](https://developers.google.com/analytics/devguides/collection/ga4/ecommerce)
</PRD> 